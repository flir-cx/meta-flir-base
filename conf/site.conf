FLIRSE_DRV_MIRROR ?= "git://git@bitbucketcommercial.flir.com:7999/camos"
FLIRSE_DRV_PROTOCOL ?= ";protocol=ssh"

# Avoid Pseudo mixing up things when digging into the .repo directory
REPODIR="${BSPDIR}/.repo"
PSEUDO_IGNORE_PATHS_append = ",${REPODIR}"

BBMASK += "/meta-flir-base/recipes-kernel/kernel-module-atheros/kernel-module-atheros.bbappend"
BBMASK += "/meta-flir-base/recipes-kernel/kernel-modules"
BBMASK += "/meta-flir-base/recipes-kernel/linux-firmware"
BBMASK += "/meta-flir-base/recipes-bsp/u-boot/u-boot-script-boundary_git.bbappend"
BBMASK += ".*meta-digi/"
BBMASK += ".*kernel-module-atheros/"


# Set up pointers to our own premirror and to Yocto project mirrors
MIRRORS =+ "\
ftp://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
http://.*/.*  http://downloads.yoctoproject.org/mirror/sources/ \n \
https://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

INHERIT += "own-mirrors"
SOURCE_MIRROR_URL ?= "http://se-arn-dev5/yocto-flirmirror/y3-premirror/"

SSTATE_MIRRORS ?= "file://.* http://se-arn-dev5/yocto-flirmirror/sstate_yocto${SDK_VERSION}/${MACHINE}/sstate-cache/PATH;downloadfilename=PATH"

# The CONNECTIVITY_CHECK_URI's are used to test whether we can succesfully
# fetch from the network (and warn you if not). To disable the test set
# the variable to be empty.
# Git example url: git://git.yoctoproject.org/yocto-firewall-test;protocol=git;rev=master

CONNECTIVITY_CHECK_URIS ?= "https://www.example.com/"
