From c1fea4635e041d2655080309f72b1c59b48d775f Mon Sep 17 00:00:00 2001
From: Felix Hammarstrand <felix.hammarstrand@flir.se>
Date: Thu, 5 Sep 2019 13:10:08 +0200
Subject: [PATCH] add hx8394 mipi display

---
 board/flir/ec201/ec201.c       | 90 +++++++++++++++++++++++++++++++++++++++-
 configs/mx7ulp_ec201_defconfig |  4 +-
 drivers/video/Makefile         |  1 +
 drivers/video/hx8394_vga.c     | 93 ++++++++++++++++++++++++++++++++++++++++++
 include/configs/ec201.h        | 14 +++++++
 5 files changed, 199 insertions(+), 3 deletions(-)
 create mode 100644 drivers/video/hx8394_vga.c

diff --git a/board/flir/ec201/ec201.c b/board/flir/ec201/ec201.c
index 3e969c6..776d3dc 100644
--- a/board/flir/ec201/ec201.c
+++ b/board/flir/ec201/ec201.c
@@ -14,7 +14,10 @@
 #include <asm/gpio.h>
 #include <usb.h>
 #include <dm.h>
-
+#include <asm/mach-imx/video.h>
+#include <mipi_dsi_northwest.h>
+#include <imx_mipi_dsi_bridge.h>
+#include <mipi_dsi_panel.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -85,3 +88,88 @@ int board_late_init(void)
 	return 0;
 }
 
+
+#ifdef CONFIG_VIDEO_MXS
+#define MIPI_GPIO_PAD_CTRL	(PAD_CTL_OBE_ENABLE)
+
+#define MIPI_RESET_GPIO	IMX_GPIO_NR(3, 7)
+#define LED_PWM_EN_GPIO	IMX_GPIO_NR(3, 6)
+
+static iomux_cfg_t const mipi_reset_pad[] = {
+	MX7ULP_PAD_PTC7__PTC7 | MUX_PAD_CTRL(MIPI_GPIO_PAD_CTRL),
+};
+
+static iomux_cfg_t const led_pwm_en_pad[] = {
+	MX7ULP_PAD_PTC6__PTC6 | MUX_PAD_CTRL(MIPI_GPIO_PAD_CTRL),
+};
+
+struct mipi_dsi_client_dev hx8394_dev = {
+	.channel	= 0,
+	.lanes = 2,
+	.format  = MIPI_DSI_FMT_RGB888,
+	.mode_flags = MIPI_DSI_MODE_VIDEO | MIPI_DSI_MODE_VIDEO_SYNC_PULSE |
+			  MIPI_DSI_MODE_EOT_PACKET | MIPI_DSI_MODE_VIDEO_HSE,
+};
+
+int board_mipi_panel_reset(void)
+{
+	gpio_direction_output(MIPI_RESET_GPIO, 0);
+	udelay(1000);
+	gpio_direction_output(MIPI_RESET_GPIO, 1);
+	return 0;
+}
+
+int board_mipi_panel_shutdown(void)
+{
+	gpio_direction_output(MIPI_RESET_GPIO, 0);
+	gpio_direction_output(LED_PWM_EN_GPIO, 0);
+	return 0;
+}
+
+void setup_mipi_reset(void)
+{
+	mx7ulp_iomux_setup_multiple_pads(mipi_reset_pad, ARRAY_SIZE(mipi_reset_pad));
+	gpio_request(MIPI_RESET_GPIO, "mipi_panel_reset");
+}
+
+void do_enable_mipi_dsi(struct display_info_t const *dev)
+{
+	setup_mipi_reset();
+
+	/* Enable backlight */
+	mx7ulp_iomux_setup_multiple_pads(led_pwm_en_pad, ARRAY_SIZE(mipi_reset_pad));
+	gpio_request(LED_PWM_EN_GPIO, "led_pwm_en");
+	gpio_direction_output(LED_PWM_EN_GPIO, 1);
+
+	/* Setup DSI host driver */
+	mipi_dsi_northwest_setup(DSI_RBASE, SIM0_RBASE);
+
+	/* Init hx8394 driver, must after dsi host driver setup */
+	hx8394_init();
+	hx8394_dev.name = displays[0].mode.name;
+	imx_mipi_dsi_bridge_attach(&hx8394_dev); /* attach hx8394 device */
+
+}
+
+struct display_info_t const displays[] = {{
+	.bus = LCDIF_RBASE,
+	.addr = 0,
+	.pixfmt = 24,
+	.detect = NULL,
+	.enable	= do_enable_mipi_dsi,
+	.mode	= {
+		.name			= "TRULY-VGA-SHERLOCK",
+		.xres           = 640,
+		.yres           = 480,
+		.pixclock       = 468984,
+		.left_margin    = 15,
+		.right_margin   = 26,
+		.upper_margin   = 9,
+		.lower_margin   = 16,
+		.hsync_len      = 20,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} } };
+size_t display_count = ARRAY_SIZE(displays);
+#endif
diff --git a/configs/mx7ulp_ec201_defconfig b/configs/mx7ulp_ec201_defconfig
index e04e4f2..a71a553 100644
--- a/configs/mx7ulp_ec201_defconfig
+++ b/configs/mx7ulp_ec201_defconfig
@@ -47,9 +47,9 @@ CONFIG_ULP_WATCHDOG=y
 # CONFIG_USB_HOST_ETHER=y
 # CONFIG_USB_ETHER_ASIX=y
 # CONFIG_USB_ETHER_RTL8152=y
-# CONFIG_VIDEO=y
+CONFIG_VIDEO=y
 #
-# CONFIG_IMX_NORTHWEST_MIPI_DSI=y
+CONFIG_IMX_NORTHWEST_MIPI_DSI=y
 # CONFIG_USB_FUNCTION_FASTBOOT=y
 # CONFIG_USB_GADGET=y
 # CONFIG_USB_GADGET_DOWNLOAD=y
diff --git a/drivers/video/Makefile b/drivers/video/Makefile
index d0d484c..dcc38d5 100644
--- a/drivers/video/Makefile
+++ b/drivers/video/Makefile
@@ -67,6 +67,7 @@ obj-$(CONFIG_IMX_NORTHWEST_MIPI_DSI) += mipi_dsi_northwest.o
 obj-$(CONFIG_IMX_SEC_MIPI_DSI) += sec_mipi_dsim.o
 obj-$(CONFIG_IMX_MIPI_DSI_BRIDGE) += imx_mipi_dsi_bridge.o
 obj-$(CONFIG_HX8363) += hx8363_wvga.o
+obj-$(CONFIG_HX8394) += hx8394_vga.o
 obj-$(CONFIG_RM67191) += rm67191.o
 obj-$(CONFIG_RM68200) += rm68200.o
 
diff --git a/drivers/video/hx8394_vga.c b/drivers/video/hx8394_vga.c
new file mode 100644
index 0000000..5a3c913
--- /dev/null
+++ b/drivers/video/hx8394_vga.c
@@ -0,0 +1,93 @@
+/*
+ * Copyright (C) 2019 FLIR Systems.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+#include <common.h>
+#include <imx_mipi_dsi_bridge.h>
+#include <mipi_display.h>
+
+
+struct reg_value {
+	u8	command; // mipi command
+	u8  delay; //delay in ms
+	u8 	buf_size; //buffer size for long commands, for short set it to 0
+	u8	buf[60];
+};
+
+static struct reg_value lcd_setup[] =
+{
+	{0x05,150,0,{0x11}}, //Sleep out
+	{0x29,0, 4,{0xB9,0xFF,0x83,0x94}}, //SETEXTC  extended command set access enable
+	{0x29,0,11,{0xB1,0x48,0x14,0x74,0x09,0x33,0x54,0x71,0x31,0x4D,0x2F}},  //SETPOWER
+	{0x29,0, 7,{0xBA,0x61,0x03,0x68,0x6B,0xB2,0xC0}}, //SETMIPI MIPI control: dsi 2-lane
+	//SETCYC display waveform cycles
+	{0x29,0,22,{0xB4,0x01,0x70,0x01,0x70,0x01,0x70,0x01,0x0C,0x76,0x35,0x00,0x3F,0x01,\
+			0x70,0x01,0x70,0x01,0x70,0x01,0x0C,0x76}}, 
+	//SETGIP_0 GIP Option0
+	{0x29,0,34,{0xD3,0x00,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x32,0x10,0x03,0x00,0x03,\
+			0x32,0x11,0xE9,0x01,0xE9,0x32,0x10,0x08,0x00,0x00,0x37,0x03,0x05,0x05,0x37,0x05,0x05,0x17,0x06,0x40}}, 
+	//SETDISP Display related register: Resolution=640RGB, Lines=480, Vertical Back Porch=12, Vertical Front Porch=13, 
+	// Line Blank=352 TCON CLK
+	{0x29,0, 7,{0xB2,0x00,0x90,0x00,0x0C,0x0D,0xFF}}, 
+	//{0x29,0,0,0,0, 12,{0xB2,0x00,0x90,0x00,0x0C,0x0D,0xFF, 0x0,0x0,0x0,0x0,0x78}}, //Test Pattern
+	{0x29,0, 8,{0xBF,0x40,0x81,0x50,0x00,0x1A,0xFC,0x01}}, //??
+	//SETGIP_1 GIP Option1
+	{0x29,0,45,{0xD5,0x18,0x18,0x24,0x25,0x19,0x19,0x18,0x18,0x18,0x18,0x06,0x07,0x04,\
+			0x05,0x02,0x03,0x00,0x01,0x20,0x21,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\
+			0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18}}, 
+	//SETGIP_2 GIP Option2
+	{0x29,0,45,{0xD6,0x19,0x19,0x21,0x20,0x18,0x18,0x18,0x18,0x18,0x18,0x01,0x00,0x03,\
+			0x02,0x05,0x04,0x07,0x06,0x25,0x24,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\
+			0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18}}, 
+	//SETGAMMA gamma curve related setting
+	{0x29,0,59,{0xE0,0x00,0x13,0x20,0x27,0x2C,0x2F,0x30,0x30,0x5E,0x6D,0x7C,0x78,0x7F,\
+			0x8E,0x92,0x94,0xA1,0xA4,0xA0,0xAE,0xBB,0x5C,0x59,0x5D,0x60,0x63,0x67,0x73,\
+			0x7F,0x00,0x13,0x20,0x27,0x2C,0x2F,0x30,0x30,0x5E,0x6D,0x7C,0x78,0x7F,0x8E,\
+			0x92,0x94,0xA1,0xA4,0xA0,0xAE,0xBB,0x5C,0x59,0x5D,0x60,0x63,0x67,0x73,0x7F}}, 
+	//SETPANEL panel related register: BGR_PANEL=1, GS_PANEL=1, reverse scan. SS_PANEL=1, shift direction from S3240 to S1
+	{0x29,0, 2,{0xCC,0x0B}}, 
+	{0x29,0, 3,{0xC0,0x1F,0x31}},  //SETSTBA Source Option
+	{0x29,0, 3,{0xB6,0x20,0x20}}, //SETVCOM VCOM voltage
+	{0x15,0, 0,{0xD4,0x02}}, //SETIOOPT Set I/O Option
+	{0x15,0, 0,{0xD2,0x77}}, //SETOFFSET
+	{0x15,0, 0,{0xC6,0xED}}, //??
+	{0x05,50,0,{0x29}} //Display on
+};
+
+
+int mipid_hx8394_lcd_setup(struct mipi_dsi_client_dev *panel_dev)
+{
+	int i;
+	debug("MIPI DSI LCD HX8363 setup.\n");
+
+	for(i=0;i<ARRAY_SIZE(lcd_setup);i++)
+	{
+		imx_mipi_dsi_bridge_pkt_write(lcd_setup[i].command,
+					(u32*) lcd_setup[i].buf, lcd_setup[i].buf_size);
+		mdelay(lcd_setup[i].delay);
+	}
+	return 0;
+}
+
+static struct mipi_dsi_client_driver hx8394_drv = {
+	.name = "TRULY-VGA-SHERLOCK",
+	.dsi_client_setup = mipid_hx8394_lcd_setup,
+};
+
+void hx8394_init(void)
+{
+	imx_mipi_dsi_bridge_add_client_driver(&hx8394_drv);
+}
diff --git a/include/configs/ec201.h b/include/configs/ec201.h
index e1af049..aa20f59 100644
--- a/include/configs/ec201.h
+++ b/include/configs/ec201.h
@@ -105,6 +105,20 @@
 #define CONFIG_CMD_CACHE
 #endif
 
+#ifdef CONFIG_VIDEO
+#define CONFIG_VIDEO_MXS
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_CMD_BMP
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_IMX_VIDEO_SKIP
+
+#define CONFIG_HX8394
+#endif
+
 /* Override imx standard behavior when loading u-boot from usb */
 #ifdef is_boot_from_usb
 #undef is_boot_from_usb
-- 
1.9.1

