From 577b5b0a980e93eb779911b74bd6478a01fda2b3 Mon Sep 17 00:00:00 2001
From: David Sernelius <david@tinygiant.se>
Date: Mon, 11 May 2020 16:23:17 +0200
Subject: [PATCH] mxc_viu.c: reset VIU when stopping stream

Fixes bug when stopping and starting stream after changing format.
Depending on timing this would cause IRQs causing the change to fail and
driver to get in a bad state. According to reference manual the format
should not be changed when viu is running, so resetting the VIU before
changing is the correct behavior.
---
 drivers/media/platform/mxc/capture/mxc_viu.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/mxc_viu.c b/drivers/media/platform/mxc/capture/mxc_viu.c
index 3063470dc041..0f35af7318c5 100644
--- a/drivers/media/platform/mxc/capture/mxc_viu.c
+++ b/drivers/media/platform/mxc/capture/mxc_viu.c
@@ -485,8 +485,6 @@ static void imx_viu_soft_reset(struct imx_viu_device *viu_dev)
 {
 	unsigned int scr;
 
-	return; 
-
 	scr = readl(viu_dev->base + VIU_SCR);
 
 	/* set reset */
@@ -1087,6 +1085,7 @@ static int imx_viu_start_streaming(struct vb2_queue *q,
 	imx_viu_irq_disable(viu_dev, ERROR_IRQ);
 	imx_viu_irq_disable(viu_dev, DMA_END_IRQ);
 
+	imx_viu_soft_reset(viu_dev);
 
 clean_up_discard:
 	INIT_LIST_HEAD(&viu_dev->discard);
@@ -1106,7 +1105,6 @@ static int imx_viu_start_streaming(struct vb2_queue *q,
 
 	spin_unlock_irqrestore(&viu_dev->slock, flags);
 
-
 	return ret;
 }
 
@@ -1129,6 +1127,8 @@ static void imx_viu_stop_streaming(struct vb2_queue *q)
 	imx_viu_irq_disable(viu_dev, ERROR_IRQ);
 	imx_viu_irq_disable(viu_dev, DMA_END_IRQ);
 
+	imx_viu_soft_reset(viu_dev);
+
 	spin_lock_irqsave(&viu_dev->slock, flags);
 
 	if (list_empty(&viu_dev->active_queue))
@@ -1265,10 +1265,14 @@ static irqreturn_t imx_viu_irq_handler(int irq, void *dev_id)
 	writel(scr, viu_dev->base + VIU_SCR);
 
 	if (scr & SCR_ERROR_IRQ) {
-		dev_warn(viu_dev->dev, "ERROR IRQ %#x, reset VIU\n",
-				      SCR_GET_ERROR_CODE(scr));
-		imx_viu_soft_reset(viu_dev);
 		errcode = SCR_GET_ERROR_CODE(scr);
+		if (0x1 == errcode) {
+			dev_dbg(viu_dev->dev, "ERROR IRQ %#x.\n",
+					errcode);
+		} else {
+			dev_warn(viu_dev->dev, "ERROR IRQ %#x.\n",
+					errcode);
+		}
 		if (0x1 == errcode || 0x2 == errcode) {
 			/* DMA_ACT is set during vertical active, recover */
 			recover = true;
-- 
2.26.2

