From 37f93b8f904c001d59c81520d5159ad92020afd5 Mon Sep 17 00:00:00 2001
From: David Sernelius <david.sernelius@flir.se>
Date: Fri, 8 Nov 2019 08:22:45 +0100
Subject: [PATCH] lp5562: Add suspend and resume functionality

---
 arch/arm/boot/dts/imx7ulp-ec201.dtsi |  6 ++---
 drivers/leds/leds-lp5562.c           | 34 ++++++++++++++++++++++++++++
 2 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/arch/arm/boot/dts/imx7ulp-ec201.dtsi b/arch/arm/boot/dts/imx7ulp-ec201.dtsi
index 23f94a4d7e86..2cdae6c75391 100644
--- a/arch/arm/boot/dts/imx7ulp-ec201.dtsi
+++ b/arch/arm/boot/dts/imx7ulp-ec201.dtsi
@@ -228,9 +228,9 @@
 			IMX7ULP_PAD_PTC8__LPI2C6_SCL    0x27
 			IMX7ULP_PAD_PTC9__LPI2C6_SDA    0x27
 			IMX7ULP_PAD_PTC10__PTC10        0x2 /* ACC_INT_n */
-			IMX7ULP_PAD_PTC11__PTC11        0x0 /* TP_LED_EN */
-			IMX7ULP_PAD_PTC15__PTC15  	    0x0 /* TORCH */
-			IMX7ULP_PAD_PTC16__PTC16  	    0x0 /* STROBE */
+			IMX7ULP_PAD_PTC11__PTC11        0x20000 /* TP_LED_EN */
+			IMX7ULP_PAD_PTC15__PTC15  	    0x20000 /* TORCH */
+			IMX7ULP_PAD_PTC16__PTC16  	    0x20000 /* STROBE */
 			>;
 	};
 
diff --git a/drivers/leds/leds-lp5562.c b/drivers/leds/leds-lp5562.c
index 05ffa34fb6ad..a6801583ab05 100644
--- a/drivers/leds/leds-lp5562.c
+++ b/drivers/leds/leds-lp5562.c
@@ -14,6 +14,7 @@
 #include <linux/firmware.h>
 #include <linux/i2c.h>
 #include <linux/leds.h>
+#include <linux/gpio.h>
 #include <linux/module.h>
 #include <linux/mutex.h>
 #include <linux/of.h>
@@ -585,6 +586,38 @@ static int lp5562_remove(struct i2c_client *client)
 	return 0;
 }
 
+#ifdef CONFIG_PM_SLEEP
+static int lp5562_suspend(struct device *dev)
+{
+	struct lp55xx_led *led = i2c_get_clientdata(to_i2c_client(dev));
+
+	if(led->chip->pdata->enable_gpio) {
+		gpio_set_value(led->chip->pdata->enable_gpio, 0);
+	}
+
+	return 0;
+}
+
+static int lp5562_resume(struct device *dev)
+{
+	struct lp55xx_led *led = i2c_get_clientdata(to_i2c_client(dev));
+
+	if(led->chip->pdata->enable_gpio) {
+		gpio_set_value(led->chip->pdata->enable_gpio, 1);
+	}
+
+	lp55xx_write(led->chip, LP5562_REG_ENABLE, LP5562_ENABLE_DEFAULT);
+	lp5562_wait_enable_done();
+
+	return 0;
+}
+#else
+#define lp5562_suspend		NULL
+#define lp5562_resume		NULL
+#endif
+
+static SIMPLE_DEV_PM_OPS(lp5562_pm_ops, lp5562_suspend, lp5562_resume);
+
 static const struct i2c_device_id lp5562_id[] = {
 	{ "lp5562", 0 },
 	{ }
@@ -604,6 +637,7 @@ static struct i2c_driver lp5562_driver = {
 	.driver = {
 		.name	= "lp5562",
 		.of_match_table = of_match_ptr(of_lp5562_leds_match),
+		.pm = &lp5562_pm_ops,
 	},
 	.probe		= lp5562_probe,
 	.remove		= lp5562_remove,
-- 
2.17.1

