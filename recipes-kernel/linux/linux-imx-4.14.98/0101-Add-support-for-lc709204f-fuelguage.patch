From 7138af730d60f9b77e1169bb127e1a1a3278d63d Mon Sep 17 00:00:00 2001
From: Erik Bengtsson <erik.bengtsson@flir.com>
Date: Tue, 17 Aug 2021 14:44:30 +0200
Subject: [PATCH] Add support for lc709204f fuelguage

---
 arch/arm/boot/dts/imx7ulp-ec201.dtsi     |  1 -
 drivers/power/supply/lc709203f_battery.c | 35 +++++++++++++++++-------
 2 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/arch/arm/boot/dts/imx7ulp-ec201.dtsi b/arch/arm/boot/dts/imx7ulp-ec201.dtsi
index 8cc32ef2b5e2..9a07d7710ea9 100644
--- a/arch/arm/boot/dts/imx7ulp-ec201.dtsi
+++ b/arch/arm/boot/dts/imx7ulp-ec201.dtsi
@@ -488,7 +488,6 @@
 		kernel-maximum-soc = <100>;
 		alert-low-rsoc = <0x0>;
 		alert-low-voltage = <0x0>;
-		battery-param = <1>;
 	};
 };
 
diff --git a/drivers/power/supply/lc709203f_battery.c b/drivers/power/supply/lc709203f_battery.c
index 25493055d448..ebeb7e8f311d 100644
--- a/drivers/power/supply/lc709203f_battery.c
+++ b/drivers/power/supply/lc709203f_battery.c
@@ -52,6 +52,10 @@
 #define LC709203F_BATTERY_LOW		15
 #define LC709203F_BATTERY_FULL		100
 
+#define LC709203F 0x1
+#define LC709204F 0x2
+
+
 enum battery_charger_status {
 	BATTERY_DISCHARGING,
 	BATTERY_CHARGING,
@@ -460,6 +464,9 @@ static int lc709203f_probe(struct i2c_client *client,
 {
 	struct lc709203f_chip *chip;
 	int ret;
+	u32 type;
+	u32 param;
+	u32 param_val;
 
 	/* Required PEC functionality */
 	client->flags = client->flags | I2C_CLIENT_PEC;    
@@ -494,6 +501,8 @@ static int lc709203f_probe(struct i2c_client *client,
 	chip->shutdown_complete = 0;
 	i2c_set_clientdata(client, chip);
 
+	type = lc709203f_read_word(chip->client, LC709203F_CHANGE_OF_THE_PARAM) == 0x0301? LC709203F:LC709204F;
+
 	if (chip->pdata->initial_rsoc) {
 		ret = lc709203f_write_word(chip->client,
 			LC709203F_INITIAL_RSOC, chip->pdata->initial_rsoc);
@@ -558,18 +567,23 @@ static int lc709203f_probe(struct i2c_client *client,
 		return ret;
 	}
 
-    if (chip->pdata->battery_param) {
-		u32 param = lc709203f_read_word(chip->client, LC709203F_CHANGE_OF_THE_PARAM);
+	type = lc709203f_read_word(chip->client, LC709203F_NUM_OF_THE_PARAM) == 0x0301? LC709203F:LC709204F;
+	dev_err(&client->dev, "Fuelguage %s detected\n", type==LC709203F?"LC709203f":"LC709204f");
+
+	param = lc709203f_read_word(chip->client, LC709203F_CHANGE_OF_THE_PARAM);
+
+	// Battery param should be 1 for lc709203f and 0 for lc709204f (FLIR ec201 settings)
+	param_val = type==LC709203F?1:0;
 
-		if(param != chip->pdata->battery_param)
-		{
-			ret = lc709203f_write_word(chip->client, LC709203F_CHANGE_OF_THE_PARAM, chip->pdata->battery_param);
-			if (ret < 0) {
-				dev_err(&client->dev, "STATUS_BIT write failed: %d\n", ret);
-				return ret;
-			}
+	if(param != param_val)
+	{
+		ret = lc709203f_write_word(chip->client, LC709203F_CHANGE_OF_THE_PARAM, param_val);
+		if (ret < 0) {
+			dev_err(&client->dev, "STATUS_BIT write failed: %d\n", ret);
+			return ret;
 		}
-    }
+	}
+
 
 skip_thermistor_config:
 	lc709203f_update_soc_voltage(chip);
@@ -700,6 +714,7 @@ MODULE_DEVICE_TABLE(i2c, lc709203f_id);
 
 static const struct of_device_id lc709203f_of_match [] = {
     { .compatible = "onsemi,lc709203f" },
+    { .compatible = "onsemi,lc709204f" },
     { }
 };
 MODULE_DEVICE_TABLE(of, lc709203f_of_match);
-- 
2.17.1

