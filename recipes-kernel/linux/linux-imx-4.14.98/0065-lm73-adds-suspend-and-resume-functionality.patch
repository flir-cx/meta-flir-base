From 21c9695ccfde396122fb1ce3f945a639bd3ea044 Mon Sep 17 00:00:00 2001
From: David Sernelius <david.sernelius@flir.se>
Date: Tue, 5 Nov 2019 15:25:59 +0100
Subject: [PATCH] lm73: adds suspend and resume functionality.

Suspend and resume the lm73 via i2c.
---
 drivers/hwmon/lm73.c | 40 ++++++++++++++++++++++++++++++++++++++--
 1 file changed, 38 insertions(+), 2 deletions(-)

diff --git a/drivers/hwmon/lm73.c b/drivers/hwmon/lm73.c
index 9653bb870a47..5c56fb28d26d 100644
--- a/drivers/hwmon/lm73.c
+++ b/drivers/hwmon/lm73.c
@@ -47,6 +47,8 @@ static const unsigned short normal_i2c[] = { 0x48, 0x49, 0x4a, 0x4c,
 #define LM73_CTRL_HI_SHIFT	2
 #define LM73_CTRL_LO_SHIFT	1
 
+#define LM73_CONF_PD_BIT	BIT(7)
+
 static const unsigned short lm73_convrates[] = {
 	14,	/* 11-bits (0.25000 C/LSB): RES1 Bit = 0, RES0 Bit = 0 */
 	28,	/* 12-bits (0.12500 C/LSB): RES1 Bit = 0, RES0 Bit = 1 */
@@ -209,6 +211,7 @@ lm73_probe(struct i2c_client *client, const struct i2c_device_id *id)
 		return -ENOMEM;
 
 	data->client = client;
+	i2c_set_clientdata(client, data);
 	mutex_init(&data->lock);
 
 	ctrl = i2c_smbus_read_byte_data(client, LM73_REG_CTRL);
@@ -221,8 +224,6 @@ lm73_probe(struct i2c_client *client, const struct i2c_device_id *id)
 	if (IS_ERR(hwmon_dev))
 		return PTR_ERR(hwmon_dev);
 
-	dev_info(dev, "sensor '%s'\n", client->name);
-
 	return 0;
 }
 
@@ -269,10 +270,45 @@ static int lm73_detect(struct i2c_client *new_client,
 	return 0;
 }
 
+
+#ifdef CONFIG_PM_SLEEP
+static int lm73_suspend(struct device *dev) {
+	int conf, err;
+	struct lm73_data *data = dev_get_drvdata(dev);
+
+	conf = i2c_smbus_read_byte_data(data->client, LM73_REG_CONF);
+	if (conf < 0 || (conf & 0x0c))
+		return -ENODEV;
+
+	err = i2c_smbus_write_byte_data(data->client, LM73_REG_CONF, conf | LM73_CONF_PD_BIT);
+
+	return err;
+}
+
+static int lm73_resume(struct device *dev) {
+	int conf, err;
+	struct lm73_data *data = dev_get_drvdata(dev);
+
+	conf = i2c_smbus_read_byte_data(data->client, LM73_REG_CONF);
+	if (conf < 0 || (conf & 0x0c))
+		return -ENODEV;
+
+	err = i2c_smbus_write_byte_data(data->client, LM73_REG_CONF, conf & ~LM73_CONF_PD_BIT);
+
+	return err;
+}
+
+static SIMPLE_DEV_PM_OPS(lm73_pm_ops, lm73_suspend, lm73_resume);
+
+#endif
+
 static struct i2c_driver lm73_driver = {
 	.class		= I2C_CLASS_HWMON,
 	.driver = {
 		.name	= "lm73",
+#ifdef CONFIG_PM_SLEEP
+		.pm = &lm73_pm_ops,
+#endif
 	},
 	.probe		= lm73_probe,
 	.id_table	= lm73_ids,
-- 
2.17.1

