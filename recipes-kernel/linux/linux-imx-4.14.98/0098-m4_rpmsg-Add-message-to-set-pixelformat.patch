From 2e3e102f23f7ceadd3d31e220d87dfc5ca6283c5 Mon Sep 17 00:00:00 2001
From: Erik Bengtsson <erik.bengtsson@flir.com>
Date: Sat, 6 Feb 2021 16:56:57 +0100
Subject: [PATCH] m4_rpmsg: Add message to set pixelformat

---
 drivers/media/platform/mxc/capture/m4_rpmsg.c | 32 ++++++++++++++++---
 drivers/media/platform/mxc/capture/m4_rpmsg.h |  7 ++++
 .../media/platform/mxc/capture/mxc_rpmsg.c    | 24 ++++++++++++--
 .../media/platform/soc_camera/soc_mediabus.c  | 10 ++++++
 include/uapi/linux/media-bus-format.h         |  1 +
 include/uapi/linux/v4l2-mediabus.h            |  1 +
 6 files changed, 69 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/mxc/capture/m4_rpmsg.c b/drivers/media/platform/mxc/capture/m4_rpmsg.c
index 4797ff064295..9416f80a6b69 100644
--- a/drivers/media/platform/mxc/capture/m4_rpmsg.c
+++ b/drivers/media/platform/mxc/capture/m4_rpmsg.c
@@ -65,6 +65,7 @@ enum rxtypes {
 	RX_BUF_2,
 	RX_BUF_3,
 	SET_RESOLUTION = 10,
+	SET_PIXELFORMAT = 11,
 	DROP_BUFFERS = 100,
 };
 
@@ -91,6 +92,7 @@ static struct ovRpmsg ovRpmsg_data;
 
 static const struct ovRpmsg_datafmt ovRpmsg_colour_fmts[] = {
 	{MEDIA_BUS_FMT_YUYV8_1X16, V4L2_COLORSPACE_JPEG},
+	{MEDIA_BUS_FMT_Y16_1X16, V4L2_COLORSPACE_RAW},
 };
 
 /* Find a data format by a pixel code in an array */
@@ -273,8 +275,8 @@ static int rpmsg_set_fmt(struct v4l2_subdev *sd,
 		return -EINVAL;
 
 	if (!fmt) {
-		mf->code	= ovRpmsg_colour_fmts[0].code;
-		mf->colorspace	= ovRpmsg_colour_fmts[0].colorspace;
+		mf->code	= fmt->code;
+		mf->colorspace	= fmt->colorspace;
 	}
 
 	mf->field	= V4L2_FIELD_NONE;
@@ -290,12 +292,13 @@ static int rpmsg_get_fmt(struct v4l2_subdev *sd,
 			  struct v4l2_subdev_format *format)
 {
 	struct v4l2_mbus_framefmt *mf = &format->format;
+	const struct ovRpmsg_datafmt *fmt = rpmsg_find_datafmt(mf->code);
 
 	if (format->pad)
 		return -EINVAL;
 
-	mf->code	= MEDIA_BUS_FMT_YUYV8_1X16;
-	mf->colorspace	= V4L2_COLORSPACE_JPEG;
+	mf->code	= fmt->code;
+	mf->colorspace	= fmt->colorspace;
 	mf->field	= V4L2_FIELD_NONE;
 
 	return 0;
@@ -452,6 +455,27 @@ int rpmsg_set_resolution(uint32_t res_mode)
 EXPORT_SYMBOL(rpmsg_set_resolution);
 
 
+/*
+ * rpmsg_change_pixelformat
+ *
+ * Tell M4 to change pixelformat to YUYV or Y16
+ */
+
+int rpmsg_set_pixelformat(uint32_t res_format)
+{
+	int err = 0;
+	csi_msg_t msg;
+	msg.type = SET_PIXELFORMAT;
+
+	msg.addr = res_format;
+
+	err = rpmsg_send(ovRpmsg_data.rpmsg_dev->ept, &msg, sizeof(msg));
+
+	return err;
+}
+EXPORT_SYMBOL(rpmsg_set_pixelformat);
+
+
 /*
  * rpmsg_lepton_callback
  *
diff --git a/drivers/media/platform/mxc/capture/m4_rpmsg.h b/drivers/media/platform/mxc/capture/m4_rpmsg.h
index 2de88d3a9332..44a19fbe3171 100644
--- a/drivers/media/platform/mxc/capture/m4_rpmsg.h
+++ b/drivers/media/platform/mxc/capture/m4_rpmsg.h
@@ -15,6 +15,13 @@ enum ovRpmsg_mode {
 	ovRpmsg_mode_MAX = 1
 };
 
+enum ovRpmsg_format {
+	ovRpmsg_format_MIN = 0,
+	ovRpmsg_format_YUYV = 0,
+	ovRpmsg_format_Y16 = 1,
+	ovRpmsg_format_MAX = 1
+};
+
 #define IR_RESOLUTION_FULL_WIDTH  160
 #define IR_RESOLUTION_FULL_HEIGHT 120
 #define IR_RESOLUTION_REDUCED_WIDTH  128
diff --git a/drivers/media/platform/mxc/capture/mxc_rpmsg.c b/drivers/media/platform/mxc/capture/mxc_rpmsg.c
index 011b009f2d86..77fb2a5c0107 100644
--- a/drivers/media/platform/mxc/capture/mxc_rpmsg.c
+++ b/drivers/media/platform/mxc/capture/mxc_rpmsg.c
@@ -54,6 +54,7 @@
 extern int rpmsg_send_buffer(dma_addr_t eba);
 extern int rpmsg_drop_buffers(void);
 extern int rpmsg_set_resolution(uint32_t res_mode);
+extern int rpmsg_set_pixelformat(uint32_t res_format);
 extern int rpmsg_setup_callback(void (*func)(uint32_t addr, uint32_t buf_num, void *ptr), void *ptr);
 
 struct imx_rpmsg_input {
@@ -122,6 +123,13 @@ static const struct imx_rpmsg_fmt rpmsg_fmts[] = {
 		.mbus_code	= MEDIA_BUS_FMT_YUYV8_1X16,
 		.bpp		= 16,
 	},
+	{
+		.name		= "Y16",
+		.fourcc		= V4L2_PIX_FMT_Y16,
+		.pix_fmt	= V4L2_PIX_FMT_Y16,
+		.mbus_code	= MEDIA_BUS_FMT_Y16_1X16,
+		.bpp		= 16,
+	},
 };
 
 static const struct imx_rpmsg_input inputs[] = {
@@ -174,6 +182,7 @@ static int imx_rpmsg_set_fmt(struct imx_rpmsg_device *rpmsg_dev)
 
 	switch (rpmsg_fmt->mbus_code) {
 	case MEDIA_BUS_FMT_YUYV8_1X16:
+	case MEDIA_BUS_FMT_Y16_1X16:
 		/* YUYV */
 		break;
 	default:
@@ -346,7 +355,8 @@ static int imx_rpmsg_vidioc_s_fmt_vid_cap(struct file *filp, void *fh,
 	const struct imx_rpmsg_fmt *rpmsg_fmt;
 
 	dev_info(rpmsg_dev->dev, "%s width %d  height %d\n", __func__, f->fmt.pix.width, f->fmt.pix.height);
-
+	dev_info(rpmsg_dev->dev, "%s field %d  bytesperline: %d sizeimage: %d\n", __func__, f->fmt.pix.field, f->fmt.pix.bytesperline, f->fmt.pix.sizeimage);
+	
 	ret = imx_rpmsg_vidioc_try_fmt_vid_cap(filp, rpmsg_dev, f);
 	if (ret < 0)
 		return ret;
@@ -359,7 +369,7 @@ static int imx_rpmsg_vidioc_s_fmt_vid_cap(struct file *filp, void *fh,
 	rpmsg_dev->v4l2_pix_fmt.height	= v4l2_pix_fmt->height;
 	rpmsg_dev->v4l2_pix_fmt.sizeimage	= v4l2_pix_fmt->sizeimage;
 	rpmsg_dev->v4l2_pix_fmt.bytesperline = v4l2_pix_fmt->bytesperline;
-	rpmsg_dev->v4l2_pix_fmt.field	= v4l2_pix_fmt->field;
+	rpmsg_dev->v4l2_pix_fmt.field	= V4L2_FIELD_NONE;
 	rpmsg_dev->buf_type		= f->type;
 
 	if(v4l2_pix_fmt->width == IR_RESOLUTION_FULL_WIDTH)
@@ -367,6 +377,11 @@ static int imx_rpmsg_vidioc_s_fmt_vid_cap(struct file *filp, void *fh,
 	else if(v4l2_pix_fmt->width == IR_RESOLUTION_REDUCED_WIDTH)
 		rpmsg_set_resolution(ovRpmsg_mode_QQVGA_128_96);
 
+	if(v4l2_pix_fmt->pixelformat == V4L2_PIX_FMT_YUYV)
+		rpmsg_set_pixelformat(ovRpmsg_format_YUYV);
+	else if(v4l2_pix_fmt->pixelformat == V4L2_PIX_FMT_Y16)
+		rpmsg_set_pixelformat(ovRpmsg_format_Y16);
+
 	return 0;
 }
 
@@ -557,6 +572,11 @@ static int imx_rpmsg_queue_setup(struct vb2_queue *q,
 			*num_planes = 1;
 		sizes[0] = fmt->sizeimage;
 		break;
+	case V4L2_PIX_FMT_Y16:
+		if (!*num_planes || *num_planes > 1)
+			*num_planes = 1;
+		sizes[0] = fmt->sizeimage;
+		break;
 	case V4L2_PIX_FMT_ABGR32:
 		if (!*num_planes || *num_planes > 1)
 			*num_planes = 1;
diff --git a/drivers/media/platform/soc_camera/soc_mediabus.c b/drivers/media/platform/soc_camera/soc_mediabus.c
index 0ad4b28266e4..2f4c0aac75b3 100644
--- a/drivers/media/platform/soc_camera/soc_mediabus.c
+++ b/drivers/media/platform/soc_camera/soc_mediabus.c
@@ -292,6 +292,16 @@ static const struct soc_mbus_lookup mbus_fmt[] = {
 		.order			= SOC_MBUS_ORDER_LE,
 		.layout			= SOC_MBUS_LAYOUT_PACKED,
 	},
+},	{
+	.code = MEDIA_BUS_FMT_Y16_1X16,
+	.fmt = {
+		.fourcc			= V4L2_PIX_FMT_Y16,
+		.name			= "Grey 16bit",
+		.bits_per_sample	= 16,
+		.packing		= SOC_MBUS_PACKING_EXTEND16,
+		.order			= SOC_MBUS_ORDER_LE,
+		.layout			= SOC_MBUS_LAYOUT_PACKED,
+	},
 }, {
 	.code = MEDIA_BUS_FMT_SGRBG8_1X8,
 	.fmt = {
diff --git a/include/uapi/linux/media-bus-format.h b/include/uapi/linux/media-bus-format.h
index 3083f0734264..c7df4572d5fa 100644
--- a/include/uapi/linux/media-bus-format.h
+++ b/include/uapi/linux/media-bus-format.h
@@ -87,6 +87,7 @@
 #define MEDIA_BUS_FMT_VYUY12_2X12		0x201d
 #define MEDIA_BUS_FMT_YUYV12_2X12		0x201e
 #define MEDIA_BUS_FMT_YVYU12_2X12		0x201f
+#define MEDIA_BUS_FMT_Y16_1X16			0x2042
 #define MEDIA_BUS_FMT_UYVY8_1X16		0x200f
 #define MEDIA_BUS_FMT_VYUY8_1X16		0x2010
 #define MEDIA_BUS_FMT_YUYV8_1X16		0x2011
diff --git a/include/uapi/linux/v4l2-mediabus.h b/include/uapi/linux/v4l2-mediabus.h
index 6e20de63ec59..d70dfefb1651 100644
--- a/include/uapi/linux/v4l2-mediabus.h
+++ b/include/uapi/linux/v4l2-mediabus.h
@@ -89,6 +89,7 @@ enum v4l2_mbus_pixelcode {
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(VYUY8_1X16),
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(YUYV8_1X16),
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(YVYU8_1X16),
+	V4L2_MBUS_FROM_MEDIA_BUS_FMT(Y16_1X16),
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(YDYUYDYV8_1X16),
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(UYVY10_1X20),
 	V4L2_MBUS_FROM_MEDIA_BUS_FMT(VYUY10_1X20),
-- 
2.17.1

