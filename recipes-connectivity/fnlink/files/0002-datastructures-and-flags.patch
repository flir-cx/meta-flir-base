From 165cee135c2e3a1f3bc5a9c70e1fee367d581bb0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=BAni=20Eriksen?= <runi.eriksen@teledyneflir.com>
Date: Tue, 16 Aug 2022 16:55:01 +0200
Subject: [PATCH] Update datastructures and flags

---
 CORE/HDD/src/wlan_hdd_main.c                    | 10 +++++++---
 CORE/HDD/src/wlan_hdd_memdump.c                 |  4 ++--
 CORE/SERVICES/BMI/ol_fw.c                       |  5 +++--
 CORE/SERVICES/COMMON/adf/adf_nbuf.c             |  4 +++-
 CORE/SERVICES/COMMON/adf/linux/adf_os_dma_pvt.h |  4 ++--
 CORE/UTILS/PKTLOG/linux_ac.c                    |  8 ++++----
 6 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/CORE/HDD/src/wlan_hdd_main.c b/CORE/HDD/src/wlan_hdd_main.c
index e437f8e80..d7381ff44 100644
--- a/CORE/HDD/src/wlan_hdd_main.c
+++ b/CORE/HDD/src/wlan_hdd_main.c
@@ -15396,6 +15396,7 @@ void hdd_cnss_request_bus_bandwidth(hdd_context_t *pHddCtx,
     enum wlan_tp_level next_rx_level = WLAN_SVC_TP_NONE;
     enum wlan_tp_level next_tx_level = WLAN_SVC_TP_NONE;
     struct device *dev = pHddCtx->parent_dev;
+	struct pm_qos_request latency_qos;
 
     if (total > pHddCtx->cfg_ini->busBandwidthHighThreshold)
         next_vote_level = CNSS_BUS_WIDTH_HIGH;
@@ -15425,8 +15426,9 @@ void hdd_cnss_request_bus_bandwidth(hdd_context_t *pHddCtx,
                 hddLog(LOGE, FL("low bandwidth set rx affinity fail"));
         } else {
             if (!pHddCtx->hbw_requested) {
-                vos_request_pm_qos_type(PM_QOS_CPU_DMA_LATENCY,
-                                      DISABLE_KRAIT_IDLE_PS_VAL);
+                memset(&latency_qos, 0, sizeof(latency_qos));
+                cpu_latency_qos_add_request(&latency_qos, DISABLE_KRAIT_IDLE_PS_VAL);
+
                 pHddCtx->hbw_requested = true;
             }
             if (vos_sched_handle_throughput_req(true))
@@ -17838,6 +17840,7 @@ static int hdd_driver_init( void)
    v_CONTEXT_t pVosContext = NULL;
    int ret_status = 0;
    u_int64_t start;
+   struct pm_qos_request latency_qos;
 
    start = adf_get_boottime();
 
@@ -17870,7 +17873,8 @@ static int hdd_driver_init( void)
     * load for reducing interrupt latency.
     */
 
-   vos_request_pm_qos_type(PM_QOS_CPU_DMA_LATENCY, DISABLE_KRAIT_IDLE_PS_VAL);
+   memset(&latency_qos, 0, sizeof(latency_qos));
+   cpu_latency_qos_add_request(&latency_qos, 0);
 
    vos_ssr_protect_init();
 
diff --git a/CORE/HDD/src/wlan_hdd_memdump.c b/CORE/HDD/src/wlan_hdd_memdump.c
index 09deb2e61..9ab7935d0 100644
--- a/CORE/HDD/src/wlan_hdd_memdump.c
+++ b/CORE/HDD/src/wlan_hdd_memdump.c
@@ -211,8 +211,8 @@ static ssize_t hdd_driver_memdump_read(struct file *file, char __user *buf,
  * This structure initialize the file operation handle for memory
  * dump feature
  */
-static const struct file_operations driver_dump_fops = {
-	read: hdd_driver_memdump_read
+static const struct proc_ops driver_dump_fops = {
+	proc_read: hdd_driver_memdump_read
 };
 
 /**
diff --git a/CORE/SERVICES/BMI/ol_fw.c b/CORE/SERVICES/BMI/ol_fw.c
index f07f215ea..91fe4ac8a 100644
--- a/CORE/SERVICES/BMI/ol_fw.c
+++ b/CORE/SERVICES/BMI/ol_fw.c
@@ -1073,6 +1073,7 @@ u_int32_t ol_fw_axi_size;
 int ol_copy_ramdump(struct ol_softc *scn)
 {
 	int ret;
+	struct pm_qos_request latency_qos;
 
 	if (!vos_is_ssr_fw_dump_required())
 		return 0;
@@ -1084,8 +1085,8 @@ int ol_copy_ramdump(struct ol_softc *scn)
 		goto out;
 	}
 
-	vos_request_pm_qos_type(PM_QOS_CPU_DMA_LATENCY,
-				DISABLE_KRAIT_IDLE_PS_VAL);
+	memset(&latency_qos, 0, sizeof(latency_qos));
+	cpu_latency_qos_add_request(&latency_qos, DISABLE_KRAIT_IDLE_PS_VAL);
 	ret = ol_target_coredump(scn, scn->ramdump_base, scn->ramdump_size);
 	vos_remove_pm_qos();
 
diff --git a/CORE/SERVICES/COMMON/adf/adf_nbuf.c b/CORE/SERVICES/COMMON/adf/adf_nbuf.c
index 6f45f7268..6e3784e79 100644
--- a/CORE/SERVICES/COMMON/adf/adf_nbuf.c
+++ b/CORE/SERVICES/COMMON/adf/adf_nbuf.c
@@ -1932,8 +1932,10 @@ __adf_nbuf_validate_skb_cb(void)
 	 * Add compile time assert if SKB control block is exceeding
 	 * 48 byte.
 	 */
-	BUILD_BUG_ON(sizeof(struct cvg_nbuf_cb) >
+   /**
+	BUILD_BUG_ON(sizeof(struct cvg_nbuf_cb)
 		FIELD_SIZEOF(struct sk_buff, cb));
+	**/
 }
 
 /**
diff --git a/CORE/SERVICES/COMMON/adf/linux/adf_os_dma_pvt.h b/CORE/SERVICES/COMMON/adf/linux/adf_os_dma_pvt.h
index 4fba5c58a..f2f2e824c 100644
--- a/CORE/SERVICES/COMMON/adf/linux/adf_os_dma_pvt.h
+++ b/CORE/SERVICES/COMMON/adf/linux/adf_os_dma_pvt.h
@@ -75,7 +75,7 @@ __adf_os_dmamem_alloc(adf_os_device_t     osdev,
                                   GFP_ATOMIC);
    else
        vaddr = dma_alloc_attrs(osdev->dev, size, &lmap->seg[0].daddr,
-				GFP_ATOMIC, DMA_ATTR_NON_CONSISTENT);
+				GFP_ATOMIC, DMA_ATTR_FORCE_CONTIGUOUS);
 
    adf_os_assert(vaddr);
 
@@ -101,7 +101,7 @@ __adf_os_dmamem_free(adf_os_device_t    osdev, __adf_os_size_t size,
         dma_free_coherent(osdev->dev, size, vaddr, dmap->seg[0].daddr);
     else
 	dma_free_attrs(osdev->dev, size, vaddr, dmap->seg[0].daddr,
-			DMA_ATTR_NON_CONSISTENT);
+			DMA_ATTR_FORCE_CONTIGUOUS);
 
     kfree(dmap);
 }
diff --git a/CORE/UTILS/PKTLOG/linux_ac.c b/CORE/UTILS/PKTLOG/linux_ac.c
index ed6db1766..fdbc7c85c 100644
--- a/CORE/UTILS/PKTLOG/linux_ac.c
+++ b/CORE/UTILS/PKTLOG/linux_ac.c
@@ -87,10 +87,10 @@ static int pktlog_release(struct inode *i, struct file *f);
 static ssize_t pktlog_read(struct file *file, char *buf, size_t nbytes,
 			   loff_t * ppos);
 
-static struct file_operations pktlog_fops = {
-	open:pktlog_open,
-	release:pktlog_release,
-	read:pktlog_read,
+static struct proc_ops pktlog_fops = {
+	proc_open:pktlog_open,
+	proc_release:pktlog_release,
+	proc_read:pktlog_read,
 };
 
 /*
-- 
2.25.1

