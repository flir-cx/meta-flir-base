meta-flir-base (yocto3.3 branch)
==============
FLIR setup for manifest based yocto is to add 2 (or 1) layers on top of NXP 
distribution.

We then have an inheritance to monitor 
(As of now, https://source.codeaurora.org/external/imx/imx-manifest)

FLIR manifest is built around what is fetched by imx-5.10.72-2.2.0.xml
(yocto 3.3 / imx-linux-hardknott branch) from this repo

(and also boundarys addition to this
(https://github.com/boundarydevices/boundary-bsp-platform.git,
branch boundary-imx-5.4.70-2.3.0, manifest default.xml - poorly maintained)

On this manifest, FLIR adds layers
meta-flir-base: FLIR open source yocto distribution
(meta-flir-internal: Add-on to meta-flir-base, with non-public additions
to yocto distribution)
Layer additions as such are added through files in tools folder(s)

Fetching code (internal):
1.  mkdir <your selection>
2.  cd <your selection>
3.  repo init -u ssh://git@bitbucketcommercial.flir.com:7999/im7/flir-yocto-manifest.git -b yocto3.3 -m flir-exported.xml
    (flir-exported.xml as manifest, yocto3.3 as branch, 
     use -b/-m flags if change to this is required)
4.  repo sync
5a. First time setup:
    MACHINE=evco DISTRO=flir source ./flir-setup-release -b build_evco
    (DISTRO=flir is implicit, and may be left out)
    or (not maintained...)
    MACHINE=imx6qsabrelite DISTRO=fsl-imx-wayland-boundary source flir-setup-release -b build_imx6qsabrelite

5b. Restore work:
    source setup-environment build_evco    
    or
    source setup-environment build_imx6qsabrelite

6.  bitbake flir-image
    (core-image-minimal should also work)

Code updates:
Add code in sources/meta-flir-base (public recipes) 
Make sure that public stuff does not depend on internal stuff
(checkout branch in meta-flir-xxx explicitely before pushing changes, 
repo tool checks out code out of branch)
Push change requests to meta-flir-base

If official test build is required, checkout a branch of manifest repo
(found in <your selection>/.repo, follow default.xml link to see which file)
edit .xml reference to branch in meta-flir-base and push branch of manifest repo
or better, generate a new manifest using:
repo manifest -r --suppress-upstream-revision --suppress-dest-branch -o my_master.xml
For others (including jenkins) to build test;
repo init -u ssh://git@bitbucketcommercial.flir.com:7999/im7/flir-yocto-manifest.git -b <manifest test branch name> -m master.xml
repo sync
...
bitbake... 
